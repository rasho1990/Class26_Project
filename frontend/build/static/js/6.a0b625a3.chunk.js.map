{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/utils/validators.js","shared/hooks/form-hook.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","places/components/PlaceForm.js","places/pages/NewPlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","formReducer","state","action","inputs","formIsValid","inputId","useForm","initInputs","initFormValidity","INITIAL_FORM_STATE","useReducer","formState","dispatch","useCallback","formData","inputReducer","isTouched","Input","element","label","id","placeholder","rows","errorText","onInputChange","INITIAL_INPUT","initValue","initIsValid","inputState","changeHandler","event","touchHandler","useEffect","inputEl","onBlur","onChange","className","htmlFor","ImageUpload","centered","imageUploaderRef","useRef","useState","file","setFile","previewImageUrl","setPreviewImageUrl","setIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","uploadedFile","fileIsValid","files","src","alt","onClick","current","click","PlaceForm","isAdd","inputHandler","formHandler","onSubmit","title","address","description","disabled","NewPlace","image","useHttpRequest","isLoading","error","clearError","sendRequest","token","useContext","AuthContext","useHistory","onClear","asOverlay","a","async","preventDefault","FormData","append","request","method","body","headers","Authorization","console","log"],"mappings":"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","file":"static/js/6.a0b625a3.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n\ttype: VALIDATOR_TYPE_MINLENGTH,\n\tval: val,\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n\ttype: VALIDATOR_TYPE_MAXLENGTH,\n\tval: val,\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n\tlet isValid = true;\n\tfor (const validator of validators) {\n\t\tif (validator.type === VALIDATOR_TYPE_REQUIRE) {\n\t\t\tisValid = isValid && value.trim().length > 0;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n\t\t\tisValid = isValid && value.trim().length >= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n\t\t\tisValid = isValid && value.trim().length <= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MIN) {\n\t\t\tisValid = isValid && +value >= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_MAX) {\n\t\t\tisValid = isValid && +value <= validator.val;\n\t\t}\n\t\tif (validator.type === VALIDATOR_TYPE_EMAIL) {\n\t\t\tisValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n\t\t}\n\t}\n\treturn isValid;\n};\n","import { useReducer, useCallback } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_FORM_DATA\":\n      return {\n        ...state,\n        inputs: {\n          ...action.inputs\n        },\n        isValid: action.isValid\n      };\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      // Loop through input fields by id\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          // If the field is undefined, continue with next object key\n          continue;\n        }\n        if (inputId === action.inputId) {\n          // If a field is updated, only make form valid if that input field is valid as well\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          // Else reset the key to the already stored state value\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          }\n        },\n        isValid: formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst useForm = (initInputs, initFormValidity) => {\n  const INITIAL_FORM_STATE = {\n    inputs: initInputs,\n    isValid: initFormValidity\n  };\n\n  const [formState, dispatch] = useReducer(formReducer, INITIAL_FORM_STATE);\n\n  // Brings state up from child component\n  const inputHandler = useCallback((inputId, value, isValid) => {\n    dispatch({ type: \"INPUT_CHANGE\", inputId, value, isValid });\n  }, []);\n\n  const setFormData = useCallback((formData, formIsValid) => {\n    dispatch({\n      type: \"SET_FORM_DATA\",\n      inputs: formData,\n      isValid: formIsValid\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport default useForm;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../utils/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n\t// Works just like Redux\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.value,\n\t\t\t\tisValid: validate(action.value, action.validators),\n\t\t\t};\n\t\tcase 'TOUCH':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst Input = ({\n\telement,\n\tlabel,\n\tid,\n\ttype,\n\tplaceholder,\n\trows,\n\terrorText,\n\tvalidators,\n\tonInputChange,\n\tinitValue,\n\tinitIsValid,\n}) => {\n\tconst INITIAL_INPUT = {\n\t\tvalue: initValue || '',\n\t\tisValid: initIsValid || false,\n\t\tisTouched: false,\n\t};\n\tconst [inputState, dispatch] = useReducer(inputReducer, INITIAL_INPUT);\n\n\tconst changeHandler = event => {\n\t\tdispatch({ type: 'CHANGE', value: event.target.value, validators });\n\t};\n\n\tconst touchHandler = () => {\n\t\tdispatch({ type: 'TOUCH' });\n\t};\n\n\tuseEffect(() => {\n\t\tonInputChange(id, inputState.value, inputState.isValid);\n\t}, [id, onInputChange, inputState.value, inputState.isValid]);\n\n\tconst inputEl =\n\t\telement === 'input' ? (\n\t\t\t<input\n\t\t\t\tid={id}\n\t\t\t\ttype={type}\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t) : (\n\t\t\t<textarea\n\t\t\t\tid={id}\n\t\t\t\trows={rows || 3}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t);\n\n\treturn (\n\t\t<div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n\t\t\t<label htmlFor={id}>{label}</label>\n\t\t\t{inputEl}\n\t\t\t{!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","import React, { useState, useRef, useEffect } from 'react';\n\nimport Button from './Button';\n\nimport './ImageUpload.css';\n\nconst ImageUpload = ({ id, centered, onInputChange }) => {\n  const imageUploaderRef = useRef();\n  const [file, setFile] = useState();\n  const [previewImageUrl, setPreviewImageUrl] = useState('');\n  const [isValid, setIsValid] = useState(false);\n\n  const uploadedHandler = (event) => {\n    let uploadedFile;\n    let fileIsValid = isValid;\n    // First check if there are files uploaded\n    if (event.target.files && event.target.files.length === 1) {\n      uploadedFile = event.target.files[0];\n      setFile(uploadedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      // If there's no valid image uploaded\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    onInputChange(id, uploadedFile, fileIsValid);\n  };\n\n  const uploadImageHandler = () => {\n    // Allows for image to be uploaded, taken from input DOM element\n    imageUploaderRef.current.click();\n  };\n\n  useEffect(() => {\n    // First check if file is undefined\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader(); // Browser defined API that helps read files\n\n    // Whenever fileReader loads a new file, it executes the specified anon function\n    fileReader.onload = () => {\n      // Set image URL to state\n      setPreviewImageUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  return (\n    <div className=\"form-control\">\n      {/* Hide input field for better user experience, connect Button to input functionality */}\n      <input\n        id={id}\n        ref={imageUploaderRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={uploadedHandler}\n      />\n      <div className={`image-upload ${centered && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewImageUrl ? (\n            <img src={previewImageUrl} alt=\"Preview Image\" />\n          ) : (\n            'Please upload an image!'\n          )}\n        </div>\n        <Button type=\"button\" onClick={uploadImageHandler}>\n          UPLOAD IMAGE\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React from 'react';\nimport Input from './../../shared/components/FormElements/Input';\nimport ImageUpload from './../../shared/components/FormElements/ImageUpload';\nimport Button from './../../shared/components/FormElements/Button';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH,\n} from './../../shared/utils/validators';\n\nimport './PlaceForm.css';\n\nconst PlaceForm = ({ isAdd, formState, inputHandler, formHandler }) => {\n  return (\n    <form className=\"place-form\" onSubmit={formHandler}>\n      {isAdd && (\n        <ImageUpload id=\"image\" centered={true} onInputChange={inputHandler} />\n      )}\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        value={formState.inputs.title.value}\n        errorText=\"Please enter a valid title!\"\n        validators={[VALIDATOR_REQUIRE()]}\n        onInputChange={inputHandler}\n      />\n      {isAdd && (\n        <Input\n          id=\"address\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Address\"\n          value={formState.inputs.address.value}\n          errorText=\"Please enter a valid address!\"\n          validators={[VALIDATOR_REQUIRE()]}\n          onInputChange={inputHandler}\n        />\n      )}\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        value={formState.inputs.description.value}\n        errorText=\"Please enter a valid description (at least 5 characters)!\"\n        validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]}\n        onInputChange={inputHandler}\n      />\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        {isAdd ? 'Add' : 'Edit'} place\n      </Button>\n    </form>\n  );\n};\n\nexport default PlaceForm;\n","import React, { useContext, Fragment } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport AuthContext from './../../shared/context/auth-context';\n\nimport PlaceForm from './../components/PlaceForm';\nimport ErrorModal from './../../shared/components/UIElements/Modal/ErrorModal';\nimport LoadingSpinner from './../../shared/components/UIElements/LoadingSpinner';\n\n// Custom hook\nimport useForm from './../../shared/hooks/form-hook';\nimport useHttpRequest from './../../shared/hooks/http-hook';\n\nconst NewPlace = () => {\n  const initInputs = {\n    title: {\n      value: '',\n      isValid: false,\n    },\n    description: {\n      value: '',\n      isValid: false,\n    },\n    address: {\n      value: '',\n      isValid: false,\n    },\n    image: {\n      value: null,\n      isValid: false,\n    },\n  };\n  const [formState, inputHandler, setFormData] = useForm(initInputs, false);\n  const { isLoading, error, clearError, sendRequest } = useHttpRequest();\n  const { token } = useContext(AuthContext);\n  const { push } = useHistory();\n\n  const addPlaceHandler = async (event) => {\n    event.preventDefault();\n\n    // Create FormData instance to send binary data\n    const formData = new FormData();\n\n    const { inputs } = formState;\n\n    const url = '/api/places';\n\n    formData.append('title', inputs.title.value);\n    formData.append('description', inputs.description.value);\n    formData.append('address', inputs.address.value);\n    formData.append('image', inputs.image.value);\n\n    const request = {\n      method: 'POST',\n      body: formData,\n      headers: { Authorization: `Bearer ${token}` },\n    };\n\n    try {\n      const responseData = await sendRequest(\n        url,\n        request.method,\n        request.body,\n        request.headers\n      );\n\n      // Redirect to homepage\n      push('/');\n    } catch (err) {\n      console.log('Error at creating place!', err);\n    }\n  };\n\n  return (\n    <Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && <LoadingSpinner asOverlay />}\n      <PlaceForm\n        formState={formState}\n        inputHandler={inputHandler}\n        formHandler={addPlaceHandler}\n        isAdd={true}\n      />\n    </Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}