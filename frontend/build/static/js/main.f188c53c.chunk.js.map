{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","clickHandler","content","onClick","domEl","document","getElementById","createPortal","logoutTimer","MainHeader","children","SideDrawer","show","CSSTransition","in","timeout","classNames","mountOnEnter","unmountOnExit","ReactDOM","NavLinks","useContext","to","exact","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawer","useAuth","setToken","tokenExpirationTime","setTokenExpirationTime","setUserId","useCallback","expirationTime","tokenExpires","Date","getTime","cookies","JSON","stringify","toISOString","localStorage","setItem","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedSession","parse","getItem","UsersPage","React","lazy","AuthPage","NewPlace","EditPlace","UserPlaces","App","routes","path","component","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.f188c53c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {},\n});\n\nexport default AuthContext;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { createPortal } from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = ({ clickHandler }) => {\n\tconst content = <div className=\"backdrop\" onClick={clickHandler}></div>;\n\tconst domEl = document.getElementById('backdrop-hook');\n\n\treturn createPortal(content, domEl);\n};\n\nexport default Backdrop;\n","import { useEffect, useState, useCallback } from 'react';\n\nlet logoutTimer;\n\nconst useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationTime, setTokenExpirationTime] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((userId, token, expirationTime) => {\n    // After login set token and userId from token in state to pass down into context\n    setToken(token);\n    setUserId(userId);\n\n    // Set expiration time or create new one (for 1 hour) for auto logout\n    const tokenExpires =\n      expirationTime || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationTime(tokenExpires);\n\n    // Save token in browser for auto login\n    const cookies = JSON.stringify({\n      userId,\n      token,\n      expirationTime: tokenExpires.toISOString(),\n    });\n    localStorage.setItem('userSession', cookies);\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationTime(null);\n    setUserId(null);\n    // Removes userSession\n    localStorage.removeItem('userSession');\n  }, []);\n\n  useEffect(() => {\n    // Only set time if there's a token and remaining token time\n    if (token && tokenExpirationTime) {\n      const remainingTime =\n        tokenExpirationTime.getTime() - new Date().getTime();\n      // Auto logout user if token expiration time has passed\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      // If user manually logs out we clear timer\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationTime]);\n\n  useEffect(() => {\n    // Check localStorage for userSession\n    const storedSession = JSON.parse(localStorage.getItem('userSession'));\n\n    // If token and expiration time hasn't passed yet then auto-login\n    if (\n      storedSession &&\n      storedSession.token &&\n      new Date(storedSession.expirationTime) > new Date()\n    ) {\n      login(\n        storedSession.userId,\n        storedSession.token,\n        new Date(storedSession.expirationTime)\n      );\n    }\n  }, [login]);\n\n  return { token, tokenExpirationTime, userId, login, logout };\n};\n\nexport default useAuth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = ({ children }) => {\n\treturn <header className=\"main-header\">{children}</header>;\n};\n\nexport default MainHeader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = ({ children, show, clickHandler }) => {\n\tconst content = (\n\t\t<CSSTransition in={show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\n\t\t\t<aside className=\"side-drawer\" onClick={clickHandler}>\n\t\t\t\t{children}\n\t\t\t</aside>\n\t\t</CSSTransition>\n\t);\n\tconst domEl = document.getElementById('drawer-hook');\n\n\treturn ReactDOM.createPortal(content, domEl);\n};\n\nexport default SideDrawer;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport AuthContext from \"./../../context/auth-context\";\n\nimport \"./NavLinks.css\";\n\nconst NavLinks = () => {\n  const { isLoggedIn, logout, userId } = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          All Users\n        </NavLink>\n      </li>\n      {isLoggedIn && (\n        <li>\n          <NavLink to={`/${userId}/places`}>My Places</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">Add New Place</NavLink>\n        </li>\n      )}\n      {!isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">Authentication</NavLink>\n        </li>\n      )}\n      {isLoggedIn && (\n        <li>\n          <button onClick={logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './MainNavigation.css';\nimport MainHeader from './MainHeader';\nimport SideDrawer from './SideDrawer';\nimport BackDrop from './../UIElements/Backdrop';\nimport NavLinks from './NavLinks';\n\nconst MainNavigation = () => {\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n\tconst openDrawer = () => {\n\t\tsetDrawerIsOpen(true);\n\t};\n\n\tconst closeDrawer = () => {\n\t\tsetDrawerIsOpen(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{drawerIsOpen && <BackDrop clickHandler={closeDrawer} />}\n\t\t\t<SideDrawer show={drawerIsOpen} clickHandler={closeDrawer}>\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</SideDrawer>\n\t\t\t<MainHeader>\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t\t<span></span>\n\t\t\t\t</button>\n\t\t\t\t<h1 className=\"main-navigation__title\">\n\t\t\t\t\t<Link to=\"/\">YourPlaces</Link>\n\t\t\t\t</h1>\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\n\t\t\t\t\t<NavLinks />\n\t\t\t\t</nav>\n\t\t\t</MainHeader>\n\t\t</>\n\t);\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from 'react-router-dom';\n\n// Global\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\n\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\n// Pages\n/* eslint-disable import/first */\nconst UsersPage = React.lazy(() => import('./users/pages/UsersPage'));\nconst AuthPage = React.lazy(() => import('./users/pages/AuthPage'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst EditPlace = React.lazy(() => import('./places/pages/EditPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\n\n// Context\nimport AuthContext from './shared/context/auth-context';\n\n// Hook\nimport useAuth from './shared/hooks/auth-hook';\n\nfunction App() {\n  const { token, userId, login, logout } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route exact path=\"/\" component={UsersPage} />\n        <Route exact path=\"/:userId/places\" component={UserPlaces} />\n        <Route exact path=\"/places/new\" component={NewPlace} />\n        <Route exact path=\"/places/:placeId\" component={EditPlace} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route exact path=\"/\" component={UsersPage} />\n        <Route exact path=\"/:userId/places\" component={UserPlaces} />\n        <Route exact path=\"/auth\" component={AuthPage} />\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token, token, userId, login, logout }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={LoadingSpinner}>{routes}</Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}